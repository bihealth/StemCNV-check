##!minimal
static_data:
  # beadpool manifest file (.bpm) from Illumina, 
  # needs to matching both the SNP array used and the desired genome version (usually A1 for hg19 and A2 for hg38)
  bpm_manifest_file: '' #REQUIRED
  # cluster file (.egt) from Illumina, matching the SNP array used, independent of genome version
  egt_cluster_file: ''  #REQUIRED
  # manifest file (.cvs) from Illumina, matching the SNP array used and the genome version
  csv_manifest_file: '' #RECOMMENDED, can be left empty, but this will make most Indel probes unusable
  # fasta file with the genome sequence
  genome_gtf_file: 'static-data/gencode.{genome}.v45.gtf.gz'                           #REQUIRED, Auto-generatable
  # PennCNV pfb file, describing the SNPs (derived from vcf/manifest files)
  penncnv_pfb_file: static-data/PennCNV-PFB_{genome}_{snp-array-name}.pfb              #REQUIRED, Auto-generatable
  # PennCNV GC model file, containing GC content values, calculated by PennCNV
  penncnv_GCmodel_file: static-data/PennCNV-GCmodel_{genome}_{snp-array-name}.gcmodel  #REQUIRED, Auto-generatable
  # bed file with windows of very high array density, calculated by stemcnv-check
  array_density_file: static-data/density_{genome}_{snp-array-name}.bed                #REQUIRED, Auto-generatable
  # bed file with windows of probes gaps on the array
  array_gaps_file: static-data/gaps_{genome}_{snp-array-name}.bed                      #REQUIRED, Auto-generatable
  # tabular files with chromosome and gband details, derived form UCSC information
  genomeInfo_file: static-data/UCSC_{genome}_chromosome-info.tsv                       #REQUIRED, Auto-generatable

global_settings:
  # By default all conda environments and apptainer images are stored to a common cache
  # This default location can also be overwritten by the '--cache-path' cmd-line flag or disabled by '--no-cache'
  cache_dir: '~/.cache/stemcnv-check'
  # Path to the mehari trsncript database file, either '__cache-default__' or a path for bin.zst database file
  mehari_transcript_db: '__cache-default__' 
  # fasta files can be compressed, but *only* with bgzip!
  # The default will let VEP download appropriate files,
  # but you can also specify a path if you already have files on the system
  hg19_genome_fasta: '__use-vep__'
  hg38_genome_fasta: '__use-vep__'

genome_version: hg38   #REQUIRED, options: hg38/GRCh38, hg19/GRCh37
array_name: ExampleArray  #REQUIRED

# Folder in which raw data files (.idat) can be found
# Important! idat files should be grouped in a subfolder per array-chip (sentrix_name)
raw_data_folder: '' #REQUIRED, Note: gencall has a hard time following links
# Output folder, where stemcnv-check will write results
data_path: data     #REQUIRED
# Output folder, where stemcnv-check will write log files
log_path: logs      #REQUIRED


evaluation_settings:
  CNV_call_categorisation:
    check_score.critical: 55
    filters.exclude.critical: ['probe_gap'] # high_probe_dens, probe_gap, (Size, min_probes, density)
    check_score.reportable: null 
    filters.exclude.reportable: [] # high_probe_dens, probe_gap, (Size, min_probes, density)
  
  SNP_clustering:
    filter-settings: '_default_' # "_default_", Filterset name, or "none"
    #Can add sample_ids here, but not generally recommended to do so, instead use columns from the sample_table
    # enries with __[column] will use all other samples with the same value in [column]
    # entries with _[column] expect a column that contains additional (, separated) sample_ids
    # Examples: extra_samples: ['__Chip_Name', '__Sample_Group']
    extra_samples: ['__Chip_Name']
  
  # Each measure used for QC is categorised as 'OK', 'unusual', or 'warning'
  # Additonally the last level can eb set to 'critical' instead of 'warning'  
  # The report color codes 'OK' as green, 'unusual' as yellow, 'warning' as orange, and 'critical' as red
  summary_stat_warning_levels:   
    # List of threshold values between normal/abnormal and abnormal/problematic(critical)
    # The first values gives the maximum allowed for 'OK', the second for 'warning'
    call_rate: [0.995, 0.99] #Note: callrate uses *minimum* thresholds, not maximum
    # Consider? call_rate: [0.99, 0.97]
    SNP_distance_to_reference: [2, 5]
    loss_gain_log2ratio: [2, 4]
    total_calls_CNV: [10, 50]
    total_calls_LOH: [30, 75]
    reportable_calls_CNV: [5, 10]
    reportable_calls_LOH: [5, 10]
    critical_calls_CNV: [1, 1]
    critical_calls_LOH: [1, 1]
    # These measures use 'critical' instead of 'warning'
    last_level_critical:
      - call_rate
      - critical_calls_CNV
      - critical_calls_LOH
      - high_impact_calls
      - computed_gender


##!medium
settings:
  # Select tools to use
  # Currently implemented tools (=valid options): PennCNV, CBS
  CNV.calling.tools:
    - PennCNV
    - CBS
##!advanced
  probe-filter-sets:
    # Each section here defines a set of SNP probe filters
    # each set can be applied to individual or all steps of the pipeline, but using only one set is recommended
    # SNP probes filters are applied as (soft) filters to the SNP vcf file.
    # - GenTrainScore: Illumina score on clustering on probe intensities, usually stable between samples (& partially chips)
    # - GenCallScore: Illumina score on Genotype call reliability, usually somewhat stable between samples
    # - Position.duplicates: many SNP arrays have some genomic positions covered with multiple probes. Multiple data 
    #                        points at the same position are problematic for CNV calling due to signal/noise issues.
    #                        These probes can all be kept, all removed, or a single probe per position with highest GC|GT can be kept
    # - pseudoautosomal: probes in the pseudo-autosomal regions of X and Y chromosomes, these are always (pseudo) diploid
    #                    which can cause issues on haploid male samples. They can also be generally more problematic.
    # Additionally SNPs on the Y chromosome are always (soft)filtered for female samples and SNPs without properly 
    # defined REF & ALT alleles are hard-filtered (=removed from the vcf). The latter mainly occurs if the manifest 
    # csv is omitted, which causes Indel-probes to be improperly defined.
    #
    # We recommend to use these filter settings:
    extended:
      GenTrainScore: 0.7
      GenCallScore:  0.7 # Anything above this should be a stable genotype call
      Position.duplicates: highest-GenCall # keep|remove|highest-GenCall|highest-GenTrain
      pseudoautosomal: remove-male # keep|remove|remove-male
    ## Other filter settings we have tested:
    ## This is closest to other Illumina defaults, but susceptible to noise
    # basic:
    #   GenTrainScore: 0
    #   GenCallScore:  0.2 # Illumina recommended minimum
    #   Position.duplicates: keep # keep|remove|highest-GenCall|highest-GenTrain
    #   pseudoautosomal: keep
    # This filter results in somewhat higher precision, but lower recall
    # full:
    #   GenTrainScore: 0.8
    #   GenCallScore:  0.8
    #   Position.duplicates: remove # keep|remove|highest-GenCall|highest-GenTrain
    #   pseudoautosomal: remove

  # Default filter set to use for all tools
  default-filter-set: extended

  PennCNV:
    # Specific filter setting for PennCNV, '_default_' uses `default-filter-set
    filter-settings: '_default_'
    enable_LOH_calls: True
    # CNVs of the same state/tool that are <= merge.distance [bp] apart are merged
    merge.distance: 500
    # Prefiltering of calls is done (after merging of nearby calls) as follows:
    # [snps] >= min.snp & [length] >= min.length & [density, snps/Mb] >= min.snp.density
    filter.minprobes: 5
    filter.minlength: 1000
    filter.mindensity.Mb: 10 #snps per Mb

  CBS:
    # Specific filter setting for CBS, '_default_' uses `default-filter-set
    filter-settings: '_default_'
    # undo.SD split value for CBS
    undo.SD.val: 1
    # CNVs of the same state/tool that are <= merge.distance [bp] apart are merged
    merge.distance: 500
    # Prefiltering of calls is done (after merging of nearby calls) as follows:
    # [snps] >= min.snp & [length] >= min.length & [density, snps/Mb] >= min.snp.density
    filter.minprobes: 5
    filter.minlength: 1000
    filter.mindensity.Mb: 10 #snps per Mb
        
    # LRR thresholds for identifying CBS segments as gain/loss on autosomes
    LRR.loss: -0.25      #CN1
    LRR.loss.large: -1.1 #CN0
    LRR.gain: 0.2        #CN3
    LRR.gain.large: 0.75 #CN4+
    # plus specifics for sex chromosomes
    LRR.male.XorY.loss:      -0.5   #CN0
    LRR.male.XorY.gain:       0.28  #CN2
    LRR.male.XorY.gain.large: 0.75  #CN3+
    LRR.female.X.loss:       -0.05  #CN1
    LRR.female.XX.loss:      -0.9   #CN0
    LRR.female.X.gain:        0.5   #CN3
    LRR.female.X.gain.large:  1.05  #CN4+

  # Values used by `stemcnv-check make-staticdata` to generate density and gap bed files
  array_attribute_summary:
    density.windows: 100000     #window size for probe density calculation (0.5Mb)
    min.gap.size: 'auto-array' #minimum distance between 2 probes to be considered a gap. Number or 'auto-array'

  CNV_processing:
    call_processing:
      # SNP probe counts may change with merging of calls from different tools
      # therefore a single filter-settings needs to be used as reference here
      filter-settings: '_default_'
      # Prefiltering of calls is done (after merging of nearby calls) as follows:
      # [snps] >= min.snp & [length] >= min.length & [density, snps/Mb] >= min.snp.density
      filter.minprobes: 5
      filter.minlength: 1000
      filter.mindensity.Mb: 10 #snps per Mb
      
      ## Calls from multiple tools are combined and combined if they match
      # This is the minimum coverage the largest single call in an combined group needs to have.
      # keep this >=50 to prevent formation/acceptance of chains of overlapping calls
      tool.overlap.greatest.call.min.perc: 50
      # This is minimum for the median of coverage percentages from all tool in any merged group
      tool.overlap.min.cov.sum.perc: 60
      ## Reference comparison
      min.reciprocal.coverage.with.ref: 80
      ## Probe gap flagging of calls
      # Values to determine 'call_has_probe_gap' based on coverage percentage with gap areas (from array attribute
      # summary) and log2 number of unique probe positions. The two values represent slope and intercept of
      # slope * percent_gap_area + gap_intercept ~ log2(uniq_snp_positions), calls above that line "have gaps"
      # These defaults mean that calls with larger % gap area need fewer unique probes to be flagged as "having a gap"
      # Specifically, calls with 33% gap need >=373 probes, 50% >=91 probes, 75% >= 12 probes, 85% >= 5 probes to be flagged
      gap_area.uniq_probes.rel: [-12, 12.5] # slope, intercept
      min.perc.gap_area: 0.33
      ## HighDensity flagging of calls
      # Calls that have a probe density which is higher than the top {density.quantile.cutoff} [%] of the array windows
      # (calculated from array attribute summary) are flagged as having "high SNP density"
      density.quantile.cutoff: 0.99

##!medium
    gene_overlap:
      # These options determine which genes are read from the gtf file
      exclude_gene_type_regex: []
      # Example: ['artifact', 'IG_.*', 'TR_.*', '(un|_)processed_pseudogene']
      include_only_these_gene_types: ['lncRNA', 'miRNA', 'protein_coding']
      # These genelists are used to mark genes with high impact
      # Gene lists files are tabular (tsv) and need the following columns:
      # list_name, hotspot, mapping, call_type, check_score, source, comment
      # list_name, hotspot, mapping, call_type, need to be filled out
      # mapping can be 'gene_name', 'gband', and 'position' and should describe the hotspot
      # call_type can be 'any', 'gain', 'loss' or 'LOH'
      high_impact_list: '__inbuilt__/supplemental-files/HighImpact-stemcell-hotspots.tsv'
      highlight_list: '__inbuilt__/supplemental-files/genelist-cancer-drivers.tsv'
      # also available: '__inbuilt__/supplemental-files/genelist-cancer-hotspots.tsv'

    Check_score_values:
      # Scoring for CNV and LOH calls
      # Base scores are used once for each CNV overlapping a gene/region of the specific type
      roi_hit_base:    50
      highimpact_base: 20
      highlight_base:   0
      # Genes are scored _once_ based on category, other regions are also scored as if they were one gene
      per_gene_roi:        10
      per_gene_highimpact: 10
      per_gene_highlight:   5
      per_gene_any:       0.2

##!advanced
    Precision:
      size_categories:
        # Lower bound size thresholds / categories for estimating CNV call precision
        extreme.loh:    5000000
        extreme.cnv:    2000000
        very.large.loh: 2500000
        very.large.cnv:  400000
        large.loh:       100000
        large.cnv:       100000
        medium.loh:       10000
        medium.cnv:       10000
   
      estimate_values:
        # Estimated the reliability (accuracy) of CNV calls
        # These are optimised for 'extended' filter settings
        # use commented values for 'full' filter settings
        multiple_Callers:
          extreme:    1.0
          very_large: 1.0
          large:      0.8 # full: 1.0
          medium:     0.8
          small:      0.2 # full: 0.5
        PennCNV:
          extreme:    1.0
          very_large: 1.0
          large:      0.8 # full: 1.0
          medium:     0.6
          small:      0.2 # full: 0.5
        CBS:
          extreme:    0.6  # full: 0.7
          very_large: 0.6  # full: 0.7
          large:      0.4
          medium:     0.15
          small:      0.1  # full: 0.2
        Call_has_Gap:   -0.1
        HighSNPDensity: -0.1

  vcf_output:
    # Which chromosome style to use in the vcf file ("1" vs "chr1")  
    chrom_style: 'UCSC' # "keep-original", UCSC, or NCBI / Ensembl


##!minimal
reports:
  # Any number of reports can be defined, the default is 'StemCNV-check-report'
  # All reports inherit from the default settings, but can overwrite specific parts
  StemCNV-check-report:
    file_type: 'html'         #REQUIRED

##!medium
#   Any number of reports can be defined, the default is 'StemCNV-check-report'.
#   file_type (html or pdf) needs to be defined for each one.
#   Note: report generation is optimised for html format, and pdf reports may have issues, especially with larger tables
#
#  StemCNV-check-full-report:
#    file_type: 'html'         #REQUIRED
#    call.data.and.plots:
#      _default_:
#        # How many plots to show at least, this strongly influences the filesize of the report
#        min_number_plots: 100
#        include.gene.table.details: 'All'

#  # These reduced settings works reasonably well for pdf
#  StemCNV-check-report-pdf:
#    file_type: 'pdf'          #REQUIRED
#    exclude_sections: [ QC.settings, QC.PennCNV, QC.CBS, QC.GenCall ]
#    call.data.and.plots:
#      include.call.table: FALSE

  #These are the default settings from which all reports inherit
  _default_:

    # individual sections can be included (whitelist) or excluded (blacklist) from report.
    # Default is special '__all__' for include, but a list of specific sections can also be used
    include_sections: '__all__'
    exclude_sections: []
    #Availbale sections (Note that tool specific ones also depend on pipeline settings)
    #  - sample.information
    #  - QC.summary
    #  - QC.GenCall
    #  - QC.PennCNV
    #  - QC.CBS
    #  - QC.settings
    #  - denovo_calls.table
    #  - denovo_calls.plots
    #  - reference_gt_calls.table
    #  - reference_gt_calls.plots
    #  - regions.of.interest
    #  - SNP.dendrogram
    #  - virtual.karyotype

    # List of columns from the sample_table that should be included in the "Sample Information section"
    sample.info.extra.cols: ['Chip_Name', 'Chip_Pos']
      
    call.data.and.plots:
      #Specific settings for each section of plots (denovo, reference_gt, regions_of_interest)
      _default_: &default_plot_settings
        exclude_filter: 
          - min_probes
          - Size
          - Density
            # high_probe_dens, probe_gap, (Size, min_probes, density)  
        # How many plots to show at least
        min_number_plots: 20
        always_include: #[]
          - 'Critical'
          - 'Reportable'
        # Include plots, table of individual calls and table of genes
        include.plot: True
        include.hotspot.table: True
        include.gene.table.details: 'Call' # Choice of: None|Call|All
        # Minimum relative size of (each) flanking region compared to call
        plot.flanking.region.relative: 2
        # Minimum size of total plot region
        plot.region.minsize: 2000000
      denovo:
        <<: *default_plot_settings
      reference_gt:
        <<: *default_plot_settings
      regions_of_interest:
        <<: *default_plot_settings

    SNP_comparison:
      # You can also use additional metadata columns from the sample table, i.e. "Sample_Group"
      dendrogram.color.by: 'Chip_Name'
      dendrogram.shape.by: 'Chip_Name'

##!complete
# These contraints define which sample_ids, sentrix_pos (Chip_Pos) and sentrix_name (Chip_Name) are valid
wildcard_constraints:
  sample_id: "[a-zA-Z0-9-_]+"
  sentrix_pos: 'R[0-9]{2}C[0-9]{2}'
  sentrix_name: '[0-9]+'

# These settings are used to define the resources snakemake allocates for each tool
tools:
  _default_:
    threads: 1
    memory: 2000 # "2000MB"
    runtime: "1h"
    partition: 'medium'
  GenCall:
    threads: 4
    memory: 8000 # "8000MB"
    runtime: "4h"
#   gtc2vcf:
#     memory: 1000 # "2000MB"
#     runtime: "1h"
  CBS:
    memory: 4000 # "4000MB"
    runtime: "30m"  
  CNV.process:
    memory: 4000 # "4000MB"
    runtime: "30m"
  PennCNV:
    memory: 500 # "500MB"
    runtime: "30m"
  summary_stats:
    threads: 4
    memory: 20000 # "2000MB"  
    runtime: "1h"
  knitr:
    memory: 10000 # "10000MB"
    runtime: "1h"
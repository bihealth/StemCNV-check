##!minimal
# Multiple arrays can be defined here, each array needs all required entries.
# The entries auto-generatable files are created by the `stemcnv-check make-staticdata` command, which will also update 
# this config file accordingly (unless --no-edit-inplace is used).
array_definition: [] ###!strip:4
#!  # This 'ExampleArray' *should* to be renamed to the actual array name
#!  ExampleArray:  
#!    genome_version: hg38      #REQUIRED, options: hg38/GRCh38, hg19/GRCh37
#!    # beadpool manifest file (.bpm) from Illumina, needs to match both the SNP array used and 
#!    # the desired genome version (usually filenames end with 'A1.bpm' for hg19 and 'A2.bpm' for hg38)
#!    bpm_manifest_file: ''     #REQUIRED
#!    # cluster file (.egt) from Illumina, matching the SNP array used, independent of genome version
#!    egt_cluster_file: ''      #REQUIRED
#!    # manifest file (.cvs) from Illumina, matching the SNP array used and the genome version
#!    csv_manifest_file: ''     #RECOMMENDED (can be left empty, but this will make most InDel probes unusable)
#!    # PennCNV pfb file, describing the SNPs (derived from vcf/manifest files)
#!    penncnv_pfb_file: static-data/{array_name}/PennCNV-PFB_{genome}.pfb              #REQUIRED, Auto-generatable
#!    # PennCNV GC model file, containing GC content values, calculated by PennCNV
#!    penncnv_GCmodel_file: static-data/{array_name}/PennCNV-GCmodel_{genome}.gcmodel  #REQUIRED, Auto-generatable
#!    # bed file with windows of very high array density, calculated by stemcnv-check
#!    array_density_file: static-data/{array_name}/density_{genome}.bed                #REQUIRED, Auto-generatable
#!    # bed file with windows of probes gaps on the array
#!    array_gaps_file: static-data/{array_name}/gaps_{genome}.bed                      #REQUIRED, Auto-generatable

# Folder in which raw data files (.idat) can be found
# Important! idat files should be grouped in a subfolder per array-chip (sentrix_name)
raw_data_folder: '' #REQUIRED, Note: gencall has a hard time following links
# Output folder, where stemcnv-check will write results
data_path: data     #REQUIRED
# Output folder, where stemcnv-check will write log files
log_path: logs      #REQUIRED


evaluation_settings:
  CNV_call_categorisation:
    check_score.critical: 55
    filters.exclude.critical: ['probe_gap', 'min_size', 'min_probes', 'min_density'] # high_probe_dens, probe_gap, (min_size, min_probes, min_density)
    check_score.reportable: null 
    filters.exclude.reportable: ['min_size', 'min_probes'] # high_probe_dens, probe_gap, (min_size, min_probes, min_density)
  
  # Each measure used for QC is categorised as 'OK', 'unusual', or 'warning'
  # Additonally the last level can eb set to 'critical' instead of 'warning'  
  # The report color codes 'OK' as green, 'unusual' as yellow, 'warning' as orange, and 'critical' as red
  summary_stat_warning_levels:   
    # List of threshold values between normal/abnormal and abnormal/problematic(critical)
    # The first values gives the maximum allowed for 'OK', the second for 'warning'
    call_rate: [0.99, 0.99] #Note: callrate uses *minimum* thresholds, not maximum
    SNP_pairwise_distance_to_reference: [2, 10]
    # SNP_distance_to_reference_span: undecided
    critical_snvs: [1, 1]
    call_count_excl_filters: ['min_size', 'min_probes', 'min_density'] # Fully ignore calls with any of these filters
    loss_gain_log2ratio: [2, 4]
    total_calls_CNV: [10, 50]
    total_calls_LOH: [30, 75]
    reportable_calls_CNV: [5, 10]
    reportable_calls_LOH: [5, 10]
    critical_calls_CNV: [1, 1]
    critical_calls_LOH: [1, 1]
    # These measures use 'critical' (red) instead of 'warning' (orange), they are also bold in the html summary table
    last_level_critical:
      - call_rate
      - computed_gender
      - SNP_pairwise_distance_to_reference
      - critical_snvs
      - critical_calls_CNV
      - critical_calls_LOH
      
  collate_output:
    # xlsx or tsv output files can be generated
    file_format: xlsx
    # These columns from the sampletable will be included in the collated summary overview table
    summary_extra_sampletable_cols: 
      - Reference_Sample
    # Different filter criteria for the collated table of all CNV calls 
    call_table_filters:
      # Only include CNV calls with one of these Call_labels
      # Allowed values: 'Critical', 'Reportable', 'Reference genotype'
      include_call_label: []
      # Exclude calls with one of these filter flags
      # Allowed values: 'min_probes', 'min_size', 'min_density', 'high_probe_dens', 'probe_gap'
      exclude_filter_flags:
        - min_probes
        - min_size
        - min_density
      # Only include calls with a minimum Check_Score
      min_check_score: 0  


##!medium
global_settings:
  # By default all conda environments and apptainer images are stored to a common cache
  # This default location can also be overwritten by the '--cache-path' cmd-line flag or disabled by '--no-cache'
  cache_dir: '~/.cache/stemcnv-check'
  # Mehari transcript database file, either '__cache-default__' or a path for the bin.zst database file
  mehari_transcript_db: '__cache-default__' 
  # Dosage sensitivity predicitions, as described in Collins et. al. 2022 (doi:10.1016/j.cell.2022.06.036)
  # Either '__cache-default__' or a path to the dosage sensitivity data file
  dosage_sensitivity_scores: '__cache-default__'
  # Fasta file for the genome sequence, either '__default-ensemble__' or a path to the genome fasta file
  # '__default-ensemble__' will download the genome fasta file from ensembl ftp servers
  # Note: fasta files can be compressed, but *only* with bgzip!
  hg19_genome_fasta: '__default-ensemble__'
  hg38_genome_fasta: '__default-ensemble__'
  # Gene annotation of the genome in gtf format, either '__default-gencode__' or a path to the gtf file
  # The default is to download GenCode v45 files
  hg19_gtf_file: '__default-gencode__'
  hg38_gtf_file: '__default-gencode__'
  # tabular files with chromosome and gband details, derived from UCSC information
  hg19_genomeInfo_file: '__default-UCSC__'
  hg38_genomeInfo_file: '__default-UCSC__'


settings:
  # Select tools to use
  # Currently implemented tools (=valid options): PennCNV, CBS
  CNV.calling.tools:
    - PennCNV
    - CBS
##!advanced
  probe-filter-sets:
    # Each section here defines a set of SNP probe filters
    # each set can be applied to individual or all steps of the pipeline, but using only one set is recommended
    # SNP probes filters are applied as (soft) filters to the SNP vcf file.
    # - GenTrainScore: Illumina score on clustering on probe intensities, usually stable between samples (& partially chips)
    # - GenCallScore: Illumina score on Genotype call reliability, usually somewhat stable between samples
    # - Position.duplicates: many SNP arrays have some genomic positions covered with multiple probes. Multiple data 
    #                        points at the same position are problematic for CNV calling due to signal/noise issues.
    #                        These probes can all be kept, all removed, or a single probe per position with highest GC|GT can be kept
    # - pseudoautosomal: probes in the pseudo-autosomal regions of X and Y chromosomes, these are always (pseudo) diploid
    #                    which can cause issues on haploid male samples. They can also be generally more problematic.
    # Additionally SNPs on the Y chromosome are always (soft)filtered for female samples and SNPs without properly 
    # defined REF & ALT alleles are hard-filtered (i.e. removed from the vcf). The latter mainly occurs if the manifest 
    # csv is omitted, which causes Indel-probes to be improperly defined.
    #
    # We recommend to use these filter settings:
    recommended:
      GenTrainScore: 0.2
      GenCallScore:  0.2 # Anything above this should be a stable genotype call according to Illumina
      Position.duplicates: highest-GenCall # keep|remove|highest-GenCall|highest-GenTrain
      Pseudoautosomal: remove-male # keep|remove|remove-male
    # These settings achieve higher precision at the cost of sensitivity
    high_precision:
      GenTrainScore: 0.8
      GenCallScore:  0.8
      Position.duplicates: highest-GenCall # keep|remove|highest-GenCall|highest-GenTrain
      Pseudoautosomal: remove-male # keep|remove|remove-male  

  # Default filter set to use for all tools
  default-filter-set: recommended

  PennCNV:
    # Specific filter setting for PennCNV, '_default_' uses `default-filter-set
    filter-settings: '_default_'
    enable_LOH_calls: True
    # Neighbouring CNVs of the same state that are merged if
    # a) the gap between them is <= 'merge.gap.absolute' [bp] or <= 'merge.gap.snps' [SNPs] or if 
    # b) they would touch/overlap after increasing their size each by 'call.extension.percent' [%]
    # Any chain of neighbouring CNVs meeting these conditions becomes a single call
    call.merging:
      merge.gap.absolute: 500
      merge.gap.snps: 10
      call.extension.percent: 60
      maximum.gap.allowed: 500000
    # Prefiltering of calls is done (after merging of nearby calls) as follows:
    # [snps] >= min.snp & [length] >= min.length & [density, snps/Mb] >= min.snp.density
    filter.minprobes: 5
    filter.minlength: 1000
    filter.mindensity.Mb: 10 #snps per Mb

  CBS:
    # Specific filter setting for CBS, '_default_' uses `default-filter-set
    filter-settings: '_default_'
    # undo.SD split value for CBS
    undo.SD.val: 1
    # Neighbouring CNVs of the same state that are merged if
    # a) the gap between them is <= 'merge.distance' [bp] or <= 'merge.gap.snps' [SNPs] or if 
    # b) they would touch/overlap after increasing their size each by 'call.extension.percent' [%]
    # Any chain of neighbouring CNVs meeting these conditions becomes a single call
    call.merging:
      merge.gap.absolute: 500
      merge.gap.snps: 10
      call.extension.percent: 60
      maximum.gap.allowed: 500000
    # Prefiltering of calls is done (after merging of nearby calls) as follows:
    # [snps] >= min.snp & [length] >= min.length & [density, snps/Mb] >= min.snp.density
    filter.minprobes: 5
    filter.minlength: 1000
    filter.mindensity.Mb: 10 #snps per Mb
        
    # LRR thresholds for identifying CBS segments as gain/loss on autosomes
    LRR.loss: -0.25      #CN1
    LRR.loss.large: -1.1 #CN0
    LRR.gain: 0.2        #CN3
    LRR.gain.large: 0.75 #CN4+
    # plus specifics for sex chromosomes
    LRR.male.XorY.loss:      -0.5   #CN0
    LRR.male.XorY.gain:       0.28  #CN2
    LRR.male.XorY.gain.large: 0.75  #CN3+
    LRR.female.X.loss:       -0.05  #CN1
    LRR.female.XX.loss:      -0.9   #CN0
    LRR.female.X.gain:        0.5   #CN3
    LRR.female.X.gain.large:  1.05  #CN4+

  # Values used by `stemcnv-check make-staticdata` to generate density and gap bed files
  array_attribute_summary:
    density.windows: 100000     #window size for probe density calculation (0.5Mb)
    min.gap.size: 'auto-array' #minimum distance between 2 probes to be considered a gap. Number or 'auto-array'

  CNV_processing:
    call_processing:
      # SNP probe counts may change with merging of calls from different tools
      # therefore a single filter-settings needs to be used as reference here
      filter-settings: '_default_'
      # Prefiltering of calls is done (after merging of nearby calls) as follows:
      # [snps] >= min.snp & [length] >= min.length & [density, snps/Mb] >= min.snp.density
      filter.minprobes: 5
      filter.minlength: 1000
      filter.mindensity.Mb: 10 #snps per Mb
      
      ## Calls from multiple tools are combined and combined if they match
      # This is the minimum coverage the largest single call in an combined group needs to have.
      # keep this >=50 to prevent formation/acceptance of chains of overlapping calls
      tool.overlap.greatest.call.min.perc: 50
      # This is minimum for the median of coverage percentages from all tool in any merged group
      tool.overlap.min.cov.sum.perc: 60
      ## Reference comparison
      min.reciprocal.coverage.with.ref: 80
      ## Probe gap flagging of calls
      # Values to determine 'call_has_probe_gap' based on coverage percentage with gap areas (from array attribute
      # summary) and log2 number of unique probe positions. The two values represent slope and intercept of
      # slope * percent_gap_area + gap_intercept ~ log2(uniq_snp_positions), calls above that line "have gaps"
      # These defaults mean that calls with larger % gap area need fewer unique probes to be flagged as "having a gap"
      # Specifically, calls with 33% gap need >=373 probes, 50% >=91 probes, 75% >= 12 probes, 85% >= 5 probes to be flagged
      gap_area.uniq_probes.rel: [-12, 12.5] # slope, intercept
      min.perc.gap_area: 0.33
      ## HighDensity flagging of calls
      # Calls that have a probe density which is higher than the top {density.quantile.cutoff} [%] of the array windows
      # (calculated from array attribute summary) are flagged as having "high SNP density"
      density.quantile.cutoff: 0.99

##!medium
    gene_overlap:
      # These options determine which genes are read from the gtf file
      exclude_gene_type_regex: []
      # Example: ['artifact', 'IG_.*', 'TR_.*', '(un|_)processed_pseudogene']
      include_only_these_gene_types: ['lncRNA', 'miRNA', 'protein_coding']
      # These genelists are used to mark genes with high impact
      # Gene lists files are tabular (tsv) and need the following columns:
      # list_name, hotspot, mapping, call_type, check_score, description, description_doi
      # list_name, hotspot, mapping, call_type & check_score need to be filled out
      # description & description_doi will be used to display extra info in the report
      # mapping can be 'gene_name', 'gband', and 'position' and should describe the hotspot
      # call_type can be 'any', 'gain', 'loss' or 'LOH'
      stemcell_hotspot_list: '__inbuilt__/supplemental-files/genelist-stemcell-hotspots.tsv'
      cancer_gene_list: '__inbuilt__/supplemental-files/genelist-cancer-drivers.tsv'
      # also available: '__inbuilt__/supplemental-files/genelist-cancer-hotspots.tsv'

    # Scoring for CNV and LOH calls
    # scoring combines a Size based contribution with scores for overlapping annotated regions
    Check_score_values:
      # stemcell_hotspot & cancer_gene scores need to be defined in the respective tables
      # CNVs/LOHs get the summed scored of each overlapping annotated gene or region (gband/position)
      # genes are only scored _once_ per call, i.e. a gene with both stemcell_hotspot and cancer_gene match will only 
      # contribute the higher of the two annotated scores. 
      
      # Dosage sensivity predicition is a based on Collins et. al. 2022 (doi:10.1016/j.cell.2022.06.036)
      # CNV loss alls overlapping a gene with pHaplos score >= threshold are scored with the 'dosage_sensitive_gene' score
      # CNV gain calls are respectively scored for the pTriplo score
      pHaplo_threshold: 0.86
      pTriplo_threshold: 0.94
      dosage_sensitive_gene:  5
      # Genes without any score from the hotspot lists of dosage sensivity are scored as 'any_other_gene'
      any_other_gene:         0.2
      # Calls overlapping any sample defined ROI get this one-time score
      any_roi_hit:           50
      # CNVs with a large CN (<1 or >3) have their size contribution multiplied by this factor
      large_CN_size_modifier: 1.5
      

##!advanced
    Precision:
      size_categories:
        # Lower bound size thresholds / categories for estimating CNV call precision
        extreme.loh:    5000000
        extreme.cnv:    2000000
        very.large.loh: 2500000
        very.large.cnv:  400000
        large.loh:       100000
        large.cnv:       100000
        medium.loh:       10000
        medium.cnv:       10000
   
      estimate_values:
        # Estimated the reliability (accuracy) of CNV calls
        # These are optimised for 'extended' filter settings
        # use commented values for 'full' filter settings
        multiple_Callers:
          extreme:    1.0
          very_large: 1.0
          large:      0.8 # full: 1.0
          medium:     0.8
          small:      0.2 # full: 0.5
        PennCNV:
          extreme:    1.0
          very_large: 1.0
          large:      0.8 # full: 1.0
          medium:     0.6
          small:      0.2 # full: 0.5
        CBS:
          extreme:    0.6  # full: 0.7
          very_large: 0.6  # full: 0.7
          large:      0.4
          medium:     0.15
          small:      0.1  # full: 0.2
        Call_has_Gap:   -0.1
        HighSNPDensity: -0.1
  
  SNV_analysis:
    filter-settings: "_default_" # "_default_", Filterset name, or "none". Note: None will even use chrY on female samples
    snv_hotspot_table: '__inbuilt__/supplemental-files/SNV-stemcell-hotspots.tsv'
    flag_GenCall_minimum: 0.2
    critical_SNV:
      - 'ROI-match'
      - 'hotspot-match'
      - 'hotspot-gene'
      - 'critical_annotation'
      # - 'any-protein-changing'
    critical_annotations:
      - stop_gained
      - start_lost
      # - stop_lost
      - frameshift_variant
      - splice_acceptor_variant
      - splice_donor_variant   
    # Only variants matching one of the following criteria are considered for the SNV tabel
    # The 'HIGH' impact category contains all annotations listed under critical
    # The missense_variant and (conservative|disruptive)_inframe_(deletion|insertion) annotations are in the 'MODEARTE' impact category
    variant_selection:
      Impact: [HIGH]
      Annotation_regex: 'missense_variant|inframe'
    
    #Can add sample_ids here, but not generally recommended to do so, instead use columns from the sample_table
    # enries with __[column] will use all other samples with the same value in [column]
    # entries with _[column] expect a column that contains additional (, separated) sample_ids
    # Examples: extra_samples: ['__Chip_Name', '__Sample_Group']
    SNP_clustering_extra_samples: ['__Chip_Name']

  vcf_output:
    # Which chromosome style to use in the vcf file ("1" vs "chr1")  
    chrom_style: 'UCSC' # "keep-original", UCSC, or NCBI / Ensembl


##!minimal
reports:
  # Any number of reports can be defined, the default is 'StemCNV-check-report'
  # All reports inherit from the default settings, but can overwrite specific parts
  StemCNV-check-report:
    file_type: 'html'         #REQUIRED

##!medium
#   Any number of reports can be defined, the default is 'StemCNV-check-report'.
#   file_type (html or pdf) needs to be defined for each one.
#   Note: report generation is optimised for html format, and pdf reports may have issues, especially with larger tables
#
#  StemCNV-check-full-report:
#    file_type: 'html'         #REQUIRED
#    call.data.and.plots:
#      _default_:
#        # How many plots to show at least, this strongly influences the filesize of the report
#        min_number_plots: 100
#        include.gene.table.details: 'All'

#  # These reduced settings works reasonably well for pdf
#  StemCNV-check-report-pdf:
#    file_type: 'pdf'          #REQUIRED
#    exclude_sections: [ QC.settings, QC.PennCNV, QC.CBS, QC.GenCall ]
#    call.data.and.plots:
#      include.call.table: FALSE

  #These are the default settings from which all reports inherit
  _default_:

    # individual sections can be included (whitelist) or excluded (blacklist) from report.
    # Default is special '__all__' for include, but a list of specific sections can also be used
    include_sections: '__all__'
    exclude_sections: []
    #Availbale sections (Note that tool specific ones also depend on pipeline settings)
    #  - sample.information
    #  - QC.summary
    #  - QC.GenCall
    #  - QC.PennCNV
    #  - QC.CBS
    #  - QC.settings
    #  - SNV.table
    #  - SNV.hotspot.coverage
    #  - SNV.QC.details
    #  - denovo_calls.table
    #  - denovo_calls.plots
    #  - reference_gt_calls.table
    #  - reference_gt_calls.plots
    #  - regions.of.interest
    #  - SNP.dendrogram
    #  - genome.overview

    # List of columns from the sample_table that should be included in the "Sample Information section"
    sample.info.extra.cols: ['Chip_Name', 'Chip_Pos']
      
    call.data.and.plots:
      #Specific settings for each section of plots (denovo, reference_gt, regions_of_interest)
      _default_: &default_plot_settings
        # Calls with any of these filters are excluded from the table of CNV calls
        # Note: if they overlap any other plot area, they are still included there!
        exclude_filter: 
          - min_probes
          - min_size
          - min_density
            # high_probe_dens, probe_gap, (min_size, min_probes, min_density)  
        # How many plots to show at least
        min_number_plots: 20
        always_include: #[]
          - 'Critical'
          - 'Reportable'
        # Include plots, table of individual calls and table of genes
        include.plot: True
        include.hotspot.table: True
        include.gene.table.details: 'Call' # Choice of: None|Call|All
        # Minimum relative size of (each) flanking region compared to call
        plot.flanking.region.relative: 2
        # Minimum size of total plot region
        plot.region.minsize: 2000000
      denovo:
        <<: *default_plot_settings
      reference_gt:
        <<: *default_plot_settings
      regions_of_interest:
        <<: *default_plot_settings

    SNV_analysis:
      critical_reasons_with_red_highlight:
        - 'ROI-match'
        - 'hotspot-match'

    SNP_comparison:
      # You can also use additional metadata columns from the sample table, i.e. "Sample_Group"
      dendrogram.color.by: 'Chip_Name'
      dendrogram.shape.by: 'Chip_Name'
      
    genome_overview:
        # Calls with any of these Filters are excluded from the overview plots
        call.exclude_filter: ['min_size', 'min_probes', 'min_density']
        show_reference: True

##!complete
# These constraints define which sample_ids, sentrix_pos (Chip_Pos) and sentrix_name (Chip_Name) are valid
# Edit at your own risk!: if sample_ids to not match this constraint, they will not be run and errors might not be intuitive
wildcard_constraints:
  sample_id: "[a-zA-Z0-9-_]+"
  sentrix_pos: 'R[0-9]{2}C[0-9]{2}'
  sentrix_name: '[0-9]+'

# These settings are used to define the resources snakemake allocates for each tool
tools:
  _default_:
    threads: 1
    memory: 2000 # "2000MB"
    runtime: "1h"
    partition: 'medium'
  GenCall:
    threads: 4
    memory: 8000 # "8000MB"
    runtime: "4h"
#   gtc2vcf:
#     memory: 1000 # "2000MB"
#     runtime: "1h"
  CBS:
    memory: 4000 # "4000MB"
    runtime: "30m"  
  CNV.process:
    memory: 4000 # "4000MB"
    runtime: "30m"
  PennCNV:
    memory: 500 # "500MB"
    runtime: "30m"
  SNV_analysis:
    threads: 2
    memory: 20000 # "2000MB"  
    runtime: "4h"
  knitr:
    memory: 10000 # "10000MB"
    runtime: "1h"

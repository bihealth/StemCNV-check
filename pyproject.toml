[build-system]
requires = ["setuptools >= 68.0"]
build-backend = "setuptools.build_meta"

[project]
name = "StemCNV-check"
authors = [
  { name="Nicolai von KÃ¼gelgen", email="nicolai.von-kuegelgen@bih-charite.de" },
]
description = "CNV Based Quality Control Workflow for Stem Cell SNP Array Data"
readme = "README.md"
requires-python = ">=3.12"
keywords = ["bioinformatics"]
license = {text = "MIT License"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Natural Language :: English",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: R",
]
dynamic = ["version", "optional-dependencies"]
dependencies = [
    "setuptools ~=68.1.2",
    # Nice, round-trip enabled YAML parsing
    "ruamel.yaml ~=0.18.6",
    # Snakemake is used for providing the actual wrapper calling functionality
    "snakemake ~=8.28.0",
    # Nicer logging
    "loguru ~=0.7.2",
    # native excel & tsv support
    "pandas ~=2.2",
    "openpyxl ~=3.1",
    "XlsxWriter ~=3.2",
    # Config validation & comparison
    "pydantic ~=2.8", 
    "deepdiff ~=8.0",
    # resource detection
    "psutil ~=7.0.0",
]

[project.urls]
Homepage = "https://github.com/bihealth/StemCNV-check"
Issues = "https://github.com/bihealth/StemCNV-check/issues"
Documentation = "https://stemcnv-check.readthedocs.io"

[project.scripts]
stemcnv-check = "stemcnv_check.__main__:main"

[tool.setuptools.dynamic]
version = {attr = "stemcnv_check.version.__version__"}

[tool.setuptools.dynamic.optional-dependencies.doc]
file = ["docs/requirements.txt"]

[tool.setuptools.dynamic.optional-dependencies.test]
file = ["tests/requirements.txt"]

[tool.setuptools.dynamic.optional-dependencies.dev]
file = ["src/stemcnv_check/envs/pyhton-requirements.txt"]

[tool.pytest.ini_options]
minversion = "6.0"
pythonpath = [
  "."
]
addopts = [
    "--import-mode=importlib",
]
testpaths = [
    "tests",
]
norecursedirs = [
    "docs",
    "*.egg-info",
    ".git",
]
filterwarnings = [
    "error",
    "ignore::DeprecationWarning",
]
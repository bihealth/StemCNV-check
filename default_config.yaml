static_data:
    bpm_manifest_file: '' #REQUIRED
    csv_manifest_file: '' #Optional (leave empty if not used)
    egt_cluster_file: '' #REQUIRED
    genome_fasta_file: '' #REQUIRED
    #TODO: this should be optional (maybe incl genome fasta?)
    genome_gtf_file: '' #REQUIRED
    pfb_file: static-data/PennCNV-PFB_from_clusterfile-stats_{genome}.pfb  #REQUIRED
    GCmodel_file: static-data/PennCNV-GCmodel-{genome}.gcmodel  #REQUIRED

raw_data_folder: ''  #REQUIRED
data_path: data
log_path: logs

settings:
  # Select tools to use and specify order of 'trust' in case of overlapping calls with different states
  # Currently implemented tools (=valid options): PennCNV, GADA, CBS
  CNV.calling.tools:
    - PennCNV
    #- GADA
    - CBS
  probe-filter-sets:
    # Each section here defines a set of SNP probe filters
    # each set can be applied to individual or all steps of the pipeline, but using only one set is recommended
    # SNP probes are first filtered by GenTrain & GenCall scores (minimal value) and then for all other criteria
    # - GenTrainScore: Illumina score on clustering on probe intensities, usually stable between samples (& partially chips)
    # - GenCallScore: Illumina score on Genotype call reliability, usually somewhat stable between samples
    # - Position.duplicates: many SNP arrays have some genomic positions covered with multiple probes.
    #                        These probes can all be kept, all removed, or a single probe per position with highest GC|GT can be kept
    # NotImplementedYet: - minMAF: minimum minor allele frequency of SNP to be used (taken from <...>)
    basic:
        GenTrainScore:  0
        GenCallScore:  0.2 # Illumina recommended minimum
        Position.duplicates: keep # keep|remove|highestGC|highestGT
        #minMAF: NA  -  not implemented yet
    extended:
        GenTrainScore: 0.7
        GenCallScore:  0.7 # Anything above this should be a stable genotype call
        Position.duplicates: highestGC # keep|remove|highestGC|highestGT
        #minMAF: NA  -  not implemented yet
    full:
        GenTrainScore: 0.8
        GenCallScore:  0.8
        Position.duplicates: remove # keep|remove|highestGC|highestGT
        #minMAF: NA  -  not implemented yet

  default-filter-set: extended

  # Only probes from these chromosomes will be used, chromosomes will be reported in this format
  # Note: the pseudo-autosomal region is often coded as (chr)XY on Illumina arrays
  chromosomes: ["chr1", "chr2", "chr3", "chr4", "chr5", "chr6", "chr7", "chr8", "chr9", "chr10", "chr11", "chr12",
                "chr13", "chr14", "chr15", "chr16", "chr17", "chr18", "chr19", "chr20", "chr21", "chr22", "chrX", "chrY"]

  PennCNV:
    # Specific filter setting for PennCNV, '__default__' uses `default-filter-set
    filter-settings: '__default__'

  CBS:
    # Filters to use on SNP probes: basic|highGT|highGC|full [=highGT+GC]; high := >0.8
    filter-settings: '__default__'
    # SD.undo split value for CBS
    SDundo: 1
    # Minimum size of segments
    min.width: 5
    # LRR thresholds for identifying CBS segments as gain/loss on autosomes
    LRR.loss: -0.25      #CN1
    LRR.loss.large: -1.1 #CN0
    LRR.gain: 0.2        #CN3
    LRR.gain.large: 0.75 #CN4+
    # plus specifics for sex chromosomes
    LRR.male.XorY.loss:      -0.5   #CN0
    LRR.male.XorY.gain:       0.28  #CN2
    LRR.male.XorY.gain.large: 0.75  #CN3+
    LRR.female.X.loss:      -0.05  #CN1
    LRR.female.XX.loss:     -0.9   #CN0
    LRR.female.X.gain:       0.5   #CN3
    LRR.female.X.gain.large: 1.05  #CN4+

  GADA:
    # Filters to use on SNP probes: basic|highGT|highGC|full [=highGT+GC]; high := >0.8
    filter-settings: '__default__'
    # Sparsness of bayesian model; higher value gives faster, but fewer results; mostly irrelevant with hig T value
    aAlpha: 0.2
    # Critical parameters of backwards eliminations, sets arbitrary significance level, higher T <> higher significance
    gada.T: 15
    mad.T: 5
    # Minimum required probes in a CNV / LOH call
    MinSegLen: 5

  postprocessing:
    ## CNVs of the same state/tool that are <= merge.distance [bp] apart are merged
    # either before or after filtering (based on merge.before.filter)
    merge.distance: 500
    merge.before.filter: TRUE
    ## Prefiltering of calls is done as follows:
    # [snps] >= min.snp & [length] >= min.lenght & [density, snps/Mb] >= min.snp.density
    min.snp: 5
    min.length: 1000
    # This is -so far- only applied to the Call region itself
    min.snp.density: 10 #snps per Mb
    ## Calls from multiple tools are combined and combined if they match
    # This is the minimum coverage the largest single call in an combined group needs to have.
    # keep this >=50 to prevent formation/acceptance of chains of overlapping calls
    tool.overlap.greatest.call.min.perc: 50
    # This is minimum for the median of coverage percentages that tool in any merged group
    tool.overlap.median.cov.perc: 60
    ## Reference comparison
    min.reciprocal.coverage.with.ref: 80

  gene_overlap:
    exclude_gene_type_regex: ['artifact', 'IG_.*', 'TR_.*', '(un|_)processed_pseudogene']
    include_only_these_gene_types: []

  make_cnv_vcf:
    filter-settings: '__default__'
    # mode can be 'combined-calls' (one vcf with combined calls) or 'split-tools' (once vcf per tool, with non-combined calls)
    mode: combined-calls
    # Which CNV types to be included in vcf
    include_states: ['gain', 'loss', 'LOH']
    # Use this to create distinct vcf files, for i.e. different CNV types. Added to filename before `.vcf`
    name_addition: ''

reports:
  #Multiple individual reports can be defined, file_type is necessary for each one!
  CNV-report:
    file_type: 'html' #REQUIRED
#  # Reports with complete features are are optimised for html, below is a reduced set that works reasonably well for pdf
#  summary-report:
#    file_type: 'pdf'
#    exclude_sections: [ QC.settings, QC.PennCNV, QC.CBS, QC.GADA, QC.GenCall, reportable.table, nonreportable.table, nonreportable.plots, circo.plot]
#    call.data.and.plots:
#      include.plot: True
#      include.call.table: FALSE
#      include.gene.table.details: 'Call'

  #This is the default from which all reports inherit settings
  __default__:
    # individual sections can be included (whitelist) or excluded (blacklist) from report.
    # Default is special '__all__' for include, but a list of specific sections can also be used
    include_sections: '__all__'
    exclude_sections: []
    #Availbale sections (Note that tool specific ones also depend on pipeline settings)
    #  - sample.information
    #  - QC.summary
    #  - QC.GenCall
    #  - QC.PennCNV
    #  - QC.CBS
    #  - QC.GADA
    #  - QC.settings
    #  - reportable.table
    #  - reportable.plots
    #  - nonreportable.table
    #  - nonreportable.plots
    #  - regions.of.interest
    #  - virtual.karyotype
    #  - circo.plot
    #  - SNP.dendrogram

    # List of columns from the sample_table that should be included in the "Sample Information section"
    sample.info.extra.cols: ['Chip_Name', 'Chip_Pos']

    call.data.and.plots:
      # Which filter to apply to probe data for plotting
      filter-settings: '__default__'
      include.plot: True
      include.call.table: True
      include.gene.table.details: 'All' # Choice of: None|Call|All
      # Minimum relative size of (each) flanking region compared to call
      plot.flanking.region.relative: 2
      # Minimum size of total plot region
      plot.region.minsize.reportable: 2e6
      plot.region.minsize.nonreportable: 5e6

    thresholds:
      # Include these sizes in the main tables of the report
      reportable.loh: 2.5e6
      reportable.cnv: 4e5
      # Classify samples as failed from these sizes on
      fail.loh: 5e6
      fail.cnv: 2e6
    # Thresholds for colored table / rec action [yellow, orange/red]
    QCwarnings:
      callrate: [0.995, 0.99]
      total_CNV: [10, 50]
      total_LOH: [30, 75]
      loss_gain_ratio: [2, 4]
      sizable_CNV: [5, 10]
      sizable_LOH: [5, 10]
      SNP_distance_reference: [1, 5]
      # # This is hard to set thresholds for, since currently all types of genes are used
      # # -> maybe add a filter for which genes should be used? (may need it's own section in here)
      # overlapping_genes: []

    SNP_comparison:
      # Which filter to apply to probe data for SNP comparison
      filter-settings: '__default__'
      # Should clustering use all genotype calls without the probe filters applied for CNV analysis
      ignore_filter: FALSE
      #Can add sample_ids here, but not generally recommended to do so, instead use columns from the sample_table
      # enries with __[column] will use all other samples with the same value in [column]
      # entries with _[column] expect a column that contains additional (, separated) sample_ids
      extra_samples: ['__Chip_Name', '__Sample_Group']
      # You can also use additional metadata columns from the sample table
      dendrogram.color.by: 'Sample_Group'
      dendrogram.shape.by: 'Chip_Name'


wildcard_constraints:
  sample_id: "[a-zA-Z0-9-_]+"
  sentrix_pos: 'R[0-9]{2}C[0-9]{2}'
  sentrix_name: '[0-9]+'

tools:
  __default__:
    threads: 1
    memory: "2000M"
    runtime: "2:00:00"
    cmd-line-params: ""
    partition: 'medium'
  GenCall:
    threads: 4
    memory: "8000M"
    runtime: "4:00:00"
    cmd-line-params: "--gender-estimate-call-rate-threshold -0.1" #maybe remove?
  gtc2vcf:
    cmd-line-params: "" #"--do-not-check-eof"
    memory: "10000M"
    runtime: "4:00:00"
  knitr:
    memory: "30000M"
    runtime: "30:00"
  CNV.process:
    memory: "4000M"
    runtime: "30:00"
  PennCNV:
    memory: "4000M"
    runtime: "30:00"

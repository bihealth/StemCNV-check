static_data:
    bpm_manifest_file: '' #REQUIRED
    egt_cluster_file: ''  #REQUIRED
    csv_manifest_file: '' #Optional (leave empty if not used)
    genome_fasta_file: 'static-data/{genome}.genome.fa'                          #REQUIRED, Auto-generatable
    genome_gtf_file: 'static-data/gencode.{genome}.v45.gtf'                      #REQUIRED, Auto-generatable
    pfb_file: static-data/PennCNV-PFB_{genome}_{snp-array-name}.pfb              #REQUIRED, Auto-generatable
    GCmodel_file: static-data/PennCNV-GCmodel_{genome}_{snp-array-name}.gcmodel  #REQUIRED, Auto-generatable
    array_density: static-data/density_{genome}_{snp-array-name}.bed             #REQUIRED, Auto-generatable
    array_gaps: static-data/gaps_{genome}_{snp-array-name}.bed                   #REQUIRED, Auto-generatable
    genomeInfo_file: static-data/UCSC_{genome}_chromosome-info.tsv               #REQUIRED, Auto-generatable

raw_data_folder: '' #REQUIRED, Note: gencall has a hard time following links
data_path: data     #REQUIRED
log_path: logs      #REQUIRED

settings:
  # Select tools to use
  # Currently implemented tools (=valid options): PennCNV & CBS
  CNV.calling.tools:
    - PennCNV
    - CBS
  probe-filter-sets:
    # Each section here defines a set of SNP probe filters
    # each set can be applied to individual or all steps of the pipeline, but using only one set is recommended
    # SNP probes are first filtered by GenTrain & GenCall scores (minimal value) and then for all other criteria
    # - GenTrainScore: Illumina score on clustering on probe intensities, usually stable between samples (& partially chips)
    # - GenCallScore: Illumina score on Genotype call reliability, usually somewhat stable between samples
    # - Position.duplicates: many SNP arrays have some genomic positions covered with multiple probes.
    #                        These probes can all be kept, all removed, or a single probe per position with highest GC|GT can be kept
    # We recommend to use these filter settings:
    extended:
        GenTrainScore: 0.7
        GenCallScore:  0.7 # Anything above this should be a stable genotype call
        Position.duplicates: highestGC # keep|remove|highestGC|highestGT
    ## Other filter settings we have tested:
    ## This is closer to other Illumina defaults, but susceptible to noise
    # basic:
    #     GenTrainScore: 0
    #     GenCallScore:  0.2 # Illumina recommended minimum
    #     Position.duplicates: keep # keep|remove|highestGC|highestGT
    # This filter results in somewhat higher precision, but lower recall
    # full:
    #     GenTrainScore: 0.8
    #     GenCallScore:  0.8
    #     Position.duplicates: remove # keep|remove|highestGC|highestGT

  default-filter-set: extended

  PennCNV:
    # Specific filter setting for PennCNV, '__default__' uses `default-filter-set
    filter-settings: '__default__'

  CBS:
    # Filters to use on SNP probes: basic|highGT|highGC|full [=highGT+GC]; high := >0.8
    filter-settings: '__default__'
    # SD.undo split value for CBS
    SDundo: 1
    # Minimum size of segments
    min.width: 5
    # LRR thresholds for identifying CBS segments as gain/loss on autosomes
    LRR.loss: -0.25      #CN1
    LRR.loss.large: -1.1 #CN0
    LRR.gain: 0.2        #CN3
    LRR.gain.large: 0.75 #CN4+
    # plus specifics for sex chromosomes
    LRR.male.XorY.loss:      -0.5   #CN0
    LRR.male.XorY.gain:       0.28  #CN2
    LRR.male.XorY.gain.large: 0.75  #CN3+
    LRR.female.X.loss:       -0.05  #CN1
    LRR.female.XX.loss:      -0.9   #CN0
    LRR.female.X.gain:        0.5   #CN3
    LRR.female.X.gain.large:  1.05  #CN4+

  array_attribute_summary:
    # FutureFeature
    density.windows: 100000     #window size for probe density calculation (0.5Mb)
    min.gap.size: 'auto-array' #minimum distance between 2 probes to be considered a gap. Number or 'auto-array'

  CNV_processing:
    call_processing:
      ## CNVs of the same state/tool that are <= merge.distance [bp] apart are merged
      # either before or after filtering (based on merge.before.filter)
      merge.distance: 500
      merge.before.filter: TRUE
      ## Prefiltering of calls is done as follows:
      # [snps] >= min.snp & [length] >= min.lenght & [density, snps/Mb] >= min.snp.density
      min.snp: 5
      min.length: 1000
      # This is -so far- only applied to the Call region itself
      min.snp.density: 10 #snps per Mb
      # SNP probe count is re-calculated for all CNV calls (per tool and after merging) with a singular filter-set
      filter-settings: '__default__'
      ## Calls from multiple tools are combined and combined if they match
      # This is the minimum coverage the largest single call in an combined group needs to have.
      # keep this >=50 to prevent formation/acceptance of chains of overlapping calls
      tool.overlap.greatest.call.min.perc: 50
      # This is minimum for the median of coverage percentages from all tool in any merged group
      tool.overlap.median.cov.perc: 60
      ## Reference comparison
      min.reciprocal.coverage.with.ref: 80
      ## Probe gap flagging of calls
      # Values to determine 'call_has_probe_gap' based on coverage percentage with gap areas (from array attribute
      # summary) and log2 number of unique probe positions. The two values represent slope and intercept of
      # slope * percent_gap_area + gap_intercept ~ log2(uniq_snp_positions), calls above that line "have gaps"
      gap_area.uniq_probes.rel: [-12, 12.5]
      min.perc.gap_area: 1/3
      ## HighDensity flagging of calls
      # Calls that have a probe density which is higher than the top {density.quantile.cutoff} [%] of the array windows
      # (calculated from array attribute summary) are flagged as having "high SNP density"
      density.quantile.cutoff: 0.99

    gene_overlap:
      # These options determine which genes are read from the gtf file
      exclude_gene_type_regex: []
      # Example: ['artifact', 'IG_.*', 'TR_.*', '(un|_)processed_pseudogene']
      include_only_these_gene_types: ['lncRNA', 'miRNA', 'protein_coding']
      # These genelists are used to mark genes with high impact
      # Gene list should contain a Name as header and then one gene per line; comments (#) are allowed
      # Genes from curated and high impact lists can be scored differently, curated score takes precedence
      high_impact_list: '__inbuilt__/supplemental-files/HighImpact-stemcell-hotspots.yaml'
      highlight_list: '__inbuilt__/supplemental-files/genelist-cancer-drivers.yaml'
      # also available: '__inbuilt__/supplemental-files/genelist-cancer-hotspots.yaml'

    scoring_thresholds:
      # Lower bound size thresholds / categories for estimating CNV call precision
      extreme.loh:    5000000
      extreme.cnv:    2000000
      very.large.loh: 2500000
      very.large.cnv:  400000
      large.loh:       100000
      large.cnv:       100000
      medium.loh:       10000
      medium.cnv:       10000
#       # Score thresholds for call designation as critical or reportable
#       min.impact.critical:   70
#       min.impact.reportable: 40
#       min.reliability.critical:   0.6
#       min.reliability.reportable: 0.3

    Impact_scoring:
      # Scoring for Impact of CNV and LOH calls
      # Note: per_gene scores are additive if the gene is listed in multiple lists
      highimpact_base: 50
      highimpact_per_gene: 5
      highlight_base: 0
      highlight_per_gene: 5
      overlap_any_gene: 0

    Precision_estimates:
      # Estimated the reliability (accuracy) of CNV calls
      # These are optimised for 'extended' filter settings
      # use commented values for 'full' filter settings
      multiple_Callers:
        extreme:    1.0
        very_large: 1.0
        large:      0.8 # full: 1.0
        medium:     0.8
        small:      0.2 # full: 0.5
      PennCNV:
      # Note: accuracy of LOH is calls is not well established
        extreme:    1.0
        very_large: 1.0
        large:      0.8 # full: 1.0
        medium:     0.6
        small:      0.2 # full: 0.5
      CBS:
        extreme:    0.6  # full: 0.7
        very_large: 0.6  # full: 0.7
        large:      0.4
        medium:     0.15
        small:      0.1  # full: 0.2
      #TODO: get better estimates!
      Call_has_Gap:   -0.1
      HighSNPDensity: -0.1

  make_cnv_vcf:
    filter-settings: '__default__'
    # mode can be 'combined-calls' (one vcf with combined calls) or 'split-tools' (once vcf per tool, with non-combined calls)
    mode: combined-calls
    # Which CNV types to be included in vcf
    include_states: ['gain', 'loss', 'LOH']
    # Use this to create distinct vcf files, for i.e. different CNV types. Added to filename before `.vcf`
    name_addition: ''

  # Only probes from these chromosomes will be used, chromosomes will be reported in this format
  # Note: the pseudo-autosomal region is often coded as (chr)XY on Illumina arrays, and will be ignored by default
  chromosomes: ["chr1", "chr2", "chr3", "chr4", "chr5", "chr6", "chr7", "chr8", "chr9", "chr10", "chr11", "chr12",
                "chr13", "chr14", "chr15", "chr16", "chr17", "chr18", "chr19", "chr20", "chr21", "chr22", "chrX", "chrY"]
               # chrMT could probably be added for hg38, but settings are not optimised for it

reports:
  CNV-QC-report:
    file_type: 'html'         #REQUIRED
    min.impact.critical:   70 #REQUIRED
    min.impact.reportable: 40 #REQUIRED

#    #Multiple individual reports can be defined, file_type and minimum scores for reportable/critical is necessary for each one!
#  full-report:
#    file_type: 'html'         #REQUIRED
#    min.impact.critical:   70 #REQUIRED
#    min.impact.reportable: 40 #REQUIRED
#    call.data.and.plots:
#      __default__:
#        # How many plots to show at least
#        min_number_plots: 100
#        include.gene.table.details: 'All'

#  # Reports with complete features are are optimised for html, below is a reduced set that works reasonably well for pdf
#  summary-report:
#    file_type: 'pdf'          #REQUIRED
#    min.impact.critical:   70 #REQUIRED
#    min.impact.reportable: 40 #REQUIRED
#    exclude_sections: [ QC.settings, QC.PennCNV, QC.CBS, QC.GenCall ]
#    call.data.and.plots:
#      include.call.table: FALSE

  #These are the default settings from which all reports inherit
  __default__:
    # individual sections can be included (whitelist) or excluded (blacklist) from report.
    # Default is special '__all__' for include, but a list of specific sections can also be used
    include_sections: '__all__'
    exclude_sections: []
    #Availbale sections (Note that tool specific ones also depend on pipeline settings)
    #  - sample.information
    #  - QC.summary
    #  - QC.GenCall
    #  - QC.PennCNV
    #  - QC.CBS
    #  - QC.settings
    #  - denovo_calls.table
    #  - denovo_calls.plots
    #  - reference_gt_calls.table
    #  - reference_gt_calls.plots
    #  - regions.of.interest
    #  - virtual.karyotype
    #  - SNP.dendrogram

    # List of columns from the sample_table that should be included in the "Sample Information section"
    sample.info.extra.cols: ['Chip_Name', 'Chip_Pos']

    call.data.and.plots:
      # Which filter to apply to probe data for plotting
      filter-settings: '__default__'
      #Specific settings for
      __default__:
        # How many plots to show at least
        min_number_plots: 20
        # Include plots, table of individual calls and table of genes
        include.plot: True
        include.call.table: True
        include.gene.table.details: 'Call' # Choice of: None|Call|All
        # Minimum relative size of (each) flanking region compared to call
        plot.flanking.region.relative: 2
        # Minimum size of total plot region
        plot.region.minsize: 2e6

    # Thresholds for SampleLevel QC color codes in the summary table
    SampleQCwarnings:
      # The first values gives the maximum for 'yellow', the second for 'orange' (or 'red')
      # Using the same value twice skips 'yellow'
      warning_level2_red:
        - call_rate
        - critical_calls_CNV
        - critical_calls_LOH
        - high_impact_calls
      call_rate: [0.995, 0.99]  #red; Callrate fails if it is *below* these values
      SNP_distance_to_reference: [1, 5]
      loss_gain_log2ratio: [2, 4]
      total_calls_CNV: [10, 50]
      total_calls_LOH: [30, 75]
      reportable_calls_CNV: [5, 10]
      reportable_calls_LOH: [5, 10]
      critical_calls_CNV: [1, 1] #red
      critical_calls_LOH: [1, 1] #red
      # highlight_calls: [2, 5]
      # high_impact_calls: [1, 1] #red

    SNP_comparison:
      # Which filter to apply to probe data for SNP comparison
      filter-settings: '__default__'
      # Should clustering use all genotype calls without the probe filters applied for CNV analysis
      ignore_filter: FALSE
      #Can add sample_ids here, but not generally recommended to do so, instead use columns from the sample_table
      # enries with __[column] will use all other samples with the same value in [column]
      # entries with _[column] expect a column that contains additional (, separated) sample_ids
      # Examples: extra_samples: ['__Chip_Name', '__Sample_Group']
      extra_samples: ['__Chip_Name']
      # You can also use additional metadata columns from the sample table, i.e. "Sample_Group"
      dendrogram.color.by: 'Chip_Name'
      dendrogram.shape.by: 'Chip_Name'


wildcard_constraints:
  sample_id: "[a-zA-Z0-9-_]+"
  sentrix_pos: 'R[0-9]{2}C[0-9]{2}'
  sentrix_name: '[0-9]+'

tools:
  __default__:
    threads: 1
    memory: "2000M"
    runtime: "2:00:00"
    cmd-line-params: ""
    partition: 'medium'
  GenCall:
    threads: 4
    memory: "8000M"
    runtime: "4:00:00"
    cmd-line-params: "--gender-estimate-call-rate-threshold -0.1"
  gtc2vcf:
    cmd-line-params: ""
    memory: "10000M"
    runtime: "4:00:00"
  knitr:
    memory: "30000M"
    runtime: "1:00:00"
  CNV.process:
    memory: "4000M"
    runtime: "30:00"
  PennCNV:
    memory: "4000M"
    runtime: "30:00"
  make_cnv_vcf:
    memory: "4000M"
    runtime: "30:00"

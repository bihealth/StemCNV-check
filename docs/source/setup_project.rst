Running the analysis for the first time
============

Before the first analysis sample table and config file need to be set up. Unless otherwise specified, stemcnv-check defaults to look for a "sample_table.tsv" (or .xlsx) and "config.yaml" file.

It is recommended to start by **creating a separate folder** for your project. This folder should include raw data folder, config.yaml and sample table files.

Once the config file is properly set up and the necessary static files are generated, you can run the StemCNV-check
workflow with simple command:
``stemcnv-check``

*Reminder for WSL users:* as before you may need to limit the memory usage of the workflow
and use this command or a variantion instead: ``stemcnv-check run -- --resources mem_mb=6000``

Project set up
============

**Setting up your own data for analysis with StemCNV-check requires:**

- config file
- sample table
- manifest and static files: egt_cluster_file, bpm_manifest_file, csv_manifest_file (optional)

Empty example files for the sample table and config can be created with this command:
``stemcnv-check setup-files``


Static files generation
============

This step takes place after the  sample data for that array is available, sample table and the config file have been set up.

**Array & genome-build specific static files** are automatic generated.

.. code:: bash

   stemcnv-check make-staticdata [-s <sample_table>] [-c <config_file>]


*Notes:* This step will also include **download of fasta and gtf** file for the reference genome build.**
Array specific files and an updated array_definition block for the config will be written into the cache directory (default: '~/.cache/stemcnv-check'). However, you still need to update or remove the array_definition from your config.yaml file, otherwise the cached definitions and files will not be used.


StemCNV-check generally requires two types of static data files: those that are specific to the genome version (incl. 
the genome reference sequence) and those that are specific to the array platform. All of these files can be downloaded 
or generated by StemCNV-check using the ``stemcnv-check make-staticdata`` command, however array specific files can only 
be created if raw data for at least one sample is available. Usually genome version specific files are only downloaded 
once and saved in a central cache location, so they should already be available after running the example data.  
The files specific to an array platform are also saved to this central cache, so that they can be shared between different 
projects. Additionally, an updated array definition block for the config is written to the cache, so that the array 
definition is also saved. However, array definitions from a project specific config file will still take precedence over 
the central definitions, therefore the project specific config file need to be adapted once more after generating the
array specific static files.

To create the array specific files, follow these steps: 

- make sure that the sample table and config file, with all required entries, are correctly set up
- Run the ``stemcnv-check make-staticdata`` 
  - This command will download missing genome specific files from the internet
    - if you already have a genome reference fasta on your system you can also use that, 
      instead of downloading a second one. To do so you need to provide the path to the fasta file for the corresponding 
      genome version in the 'global_settings' block of the config file. This section will only be included in the config 
      if you use at least the ``--config-details medium`` flag for the setup-files command. Other files like gtf can also
  - Then it will generate the array specific files, which also requires processing the raw data from at least one sample.

This command will also print out the paths to the generated array specific files. You can either copy these paths your 
project specific config file to use a complete array definition, or you can simply remove the array definition block 
and rely on the automatically saved central definitions.
